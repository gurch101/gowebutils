"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[590],{2214:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"authorization","title":"Authorization","description":"gowebutils provides a robust Role-Based Access Control (RBAC) system for managing user permissions in your application.","source":"@site/docs/authorization.md","sourceDirName":".","slug":"/authorization","permalink":"/gowebutils/docs/authorization","draft":false,"unlisted":false,"editUrl":"https://github.com/gurch101/gowebutils/tree/main/packages/create-docusaurus/templates/shared/docs/authorization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Authentication","permalink":"/gowebutils/docs/authentication"},"next":{"title":"Caching","permalink":"/gowebutils/docs/caching"}}');var o=i(4848),s=i(8453);const r={},a="Authorization",l={},d=[{value:"Database Schema",id:"database-schema",level:3},{value:"Authorization Model",id:"authorization-model",level:3},{value:"Implementing Authorization",id:"implementing-authorization",level:3},{value:"Middleware-based Authorization",id:"middleware-based-authorization",level:4},{value:"Handler-based Authorization",id:"handler-based-authorization",level:4}];function c(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"authorization",children:"Authorization"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"gowebutils"})," provides a robust Role-Based Access Control (RBAC) system for managing user permissions in your application."]}),"\n",(0,o.jsx)(n.h3,{id:"database-schema",children:"Database Schema"}),"\n",(0,o.jsx)(n.p,{children:"Set up your database with the following tables to enable authorization:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(255) NOT NULL UNIQUE,\n    email VARCHAR(255) UNIQUE,\n    is_active BOOLEAN DEFAULT true,\n    role_id INTEGER REFERENCES roles(id),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Roles table\nCREATE TABLE roles (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL UNIQUE,\n    description TEXT\n);\n\n\n-- Role-Permission mapping table\nCREATE TABLE role_permissions (\n    role_id INTEGER REFERENCES roles(id) ON DELETE CASCADE,\n    code VARCHAR(255) NOT NULL UNIQUE,  -- e.g., "create_post", "delete_user"\n    description TEXT,\n    PRIMARY KEY (role_id, code)\n);\n'})}),"\n",(0,o.jsx)(n.h3,{id:"authorization-model",children:"Authorization Model"}),"\n",(0,o.jsx)(n.p,{children:"The authorization system follows a simple hierarchy:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Each user is assigned to a single role"}),"\n",(0,o.jsx)(n.li,{children:"Each role can have multiple permissions"}),"\n",(0,o.jsx)(n.li,{children:"A permission is a code and description representing an action that can be performed"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"implementing-authorization",children:"Implementing Authorization"}),"\n",(0,o.jsx)(n.p,{children:"You can check permissions in two ways:"}),"\n",(0,o.jsx)(n.h4,{id:"middleware-based-authorization",children:"Middleware-based Authorization"}),"\n",(0,o.jsx)(n.p,{children:"Protect routes by requiring specific permissions:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'// Returns a 403 Forbidden response if the user lacks the CREATE_POST permission\napp.AddProtectedRouteWithPermission("POST", "/api/post", handler, "CREATE_POST")\n'})}),"\n",(0,o.jsx)(n.p,{children:"This approach automatically checks permissions before the handler is executed, simplifying your route definitions."}),"\n",(0,o.jsx)(n.h4,{id:"handler-based-authorization",children:"Handler-based Authorization"}),"\n",(0,o.jsx)(n.p,{children:"Check permissions directly within your handler functions:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'func MyHandler(w http.ResponseWriter, r *http.Request) {\n  user := GetUserFromContext(r.Context())\n  if !user.HasAnyPermission("CREATE_POST", "VIEW_POST", "EDIT_POST") {\n    httputils.ForbiddenResponse(w, r)\n\n    return\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"This method provides more flexibility when you need complex permission checks or conditional authorization logic."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);