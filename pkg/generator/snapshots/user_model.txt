package users

import (
	"github.com/gurch101/gowebutils/pkg/validation"
	"time"
)

var ErrNameAlreadyExists = validation.Error{
	Field:   "name",
	Message: "Name already exists",
}
var ErrEmailAlreadyExists = validation.Error{
	Field:   "email",
	Message: "Email already exists",
}
var ErrTenantNotFound = validation.Error{
	Field:   "tenantId",
	Message: "Tenant not found",
}

type userModel struct {
	ID        int64
	Version   int64
	Name      string
	Email     string
	SomeInt64 int64
	TenantID  int64
	SomeBool  bool
	CreatedAt time.Time
	UpdatedAt time.Time
}

func newCreateUserModel(
	name string,
	email string,
	someInt64 int64,
	tenantId int64,
	someBool bool,
) *userModel {
	return &userModel{
		Name:      name,
		Email:     email,
		SomeInt64: someInt64,
		TenantID:  tenantId,
		SomeBool:  someBool,
	}
}

func (m *userModel) Field(field string) interface{} {
	switch field {
	case "id":
		return &m.ID
	case "version":
		return &m.Version
	case "name":
		return &m.Name
	case "email":
		return &m.Email
	case "some_int64":
		return &m.SomeInt64
	case "tenant_id":
		return &m.TenantID
	case "some_bool":
		return &m.SomeBool
	case "created_at":
		return &m.CreatedAt
	case "updated_at":
		return &m.UpdatedAt
	default:
		return nil
	}
}
